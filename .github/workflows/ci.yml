name: CI/CD - MovieFlix App

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Criar diretÃ³rio data-lake
        run: mkdir -p ${{ github.workspace }}/data-lake

      - name: Criar rede docker
        run: docker network create movieflix-net || true

      - name: Build ETL Image
        run: docker build -f etl/etl.Dockerfile -t movieflix-etl:ci .

      - name: Build Nginx Image
        run: docker build -f docker/nginx/nginx.Dockerfile -t movieflix-nginx:ci .

      - name: Build App Image
        run: docker build -f docker/app.Dockerfile -t movieflix-app:ci .

      - name: Run Postgres
        run: |
          docker run -d --rm \
            --name movieflix-postgres \
            --network movieflix-net \
            -e POSTGRES_USER=movieflix \
            -e POSTGRES_PASSWORD=movieflix \
            -e POSTGRES_DB=movieflix_dw \
            -v ${{ github.workspace }}/data-lake:/data-lake \
            postgres:15
          # Esperar DB subir
          for i in {1..15}; do
            if docker exec movieflix-postgres pg_isready -U movieflix -d movieflix_dw; then
              break
            fi
            sleep 5
          done


      - name: Run App
        run: |
          docker run -d --rm \
            --name movieflix-app \
            --network movieflix-net \
            -e POSTGRES_HOST=movieflix-postgres \
            -e POSTGRES_USER=movieflix \
            -e POSTGRES_PASSWORD=movieflix \
            -e POSTGRES_DB=movieflix_dw \
            -v ${{ github.workspace }}/data-lake:/data-lake \
            -p 3000:3000 \
            movieflix-app:ci
          

      - name: Run Nginx
        run: |
          docker run -d --rm \
            --name movieflix-nginx \
            --network movieflix-net \
            -p 80:80 \
            movieflix-nginx:ci
          sleep 5
          docker logs movieflix-nginx
          docker stop movieflix-nginx

      - name: Set IMAGE TAG
        id: vars
        run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Push Docker image
        run: |
          IMAGE=${{ secrets.DOCKER_HUB_USERNAME }}/movieflix-app
          docker tag movieflix-app:ci $IMAGE:${{ steps.vars.outputs.TAG }}
          docker tag movieflix-app:ci $IMAGE:latest
          docker push $IMAGE:${{ steps.vars.outputs.TAG }}
          docker push $IMAGE:latest